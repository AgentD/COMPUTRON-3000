
    Overview
    ********

  The term ATA ("Advanced Technology Attachment") referres to an extension
  for the IBM PC/AT that connects a new kind of hard drive with an integrated
  controller directly to the 16 bit ISA bus.

  Since it had an internal controller (as opposed to an external controller
  mounted onto the attachment board), the electronical specification for the
  interface connector and cable was referred to as IDE ("Integrated Drive
  Electronics").

  With the advent of S-ATA (Serial ATA) in the IBM clones used nowadays, it
  was relabled to P-ATA (parallel ATA).

  The term ATAPI referres to a protocol that allows the transmission of SCSI
  commands over the IDE bus, to allow more complicated operations, such as
  checking for the presence of removable media, ejecting CD drives, etc...

    Interface
    *********

  All we need to know about the IDE bus is that it has a 16 bit data bus,
  a 3 bit address bus and the usual chip-select, read and write lines,
  directly connected to a controller on the drive.

  For ease of use (and hardware design), the main 8 registers have been
  mapped directly into the I/O address range.

  Except for the data register, all registers are 8 bit registers. The data
  register actually uses the full 16 bit, but since the CPU is an 8 bit CPU,
  it can only transfer 8 bit at a time, so the low byte is transfered and the
  high byte is latched.

  So, before writing to the IDE device, the high byte has to be written into
  the latch first, then the low byte has to be written, initiating the actual
  IDE transfer.

  When reading, the low byte has to be read first, then the high byte can be
  read from the latch.

  For simplicity, DMA mode is not supported (the bytes have to be read/written
  individually in a loop to transfer a sector).


    I/O registers
    *************

  Below you can see a table of I/O addresses and the coresponding registers,
  as well as a brief description of the registers.


  I/O address | READ                     | WRITE
  ------------+--------------------------+---------------------------
    1110 1111 | DATA HIGH BYTE LATCH     | DATA HIGH BYTE LATCH
    1111 0000 | DATA LOW BYTE            | DATA LOW BYTE
    1111 0001 | ERROR                    | FEATURES
    1111 0010 | SECTOR COUNT             | SECTOR COUNT
    1111 0011 | SECTOR NUM (LBA[0..7])   | SECTOR NUM (LBA[0..7])
    1111 0100 | CYL NUM LO (LBA[8..15])  | CYL NUM LO (LBA[8..15])
    1111 0101 | CYL NUM HI (LBA[16..23]) | CYL NUM HI (LBA[16..23])
    1111 0110 | DEV REG + HEAD NUM       | DEV REG + HEAD NUM (LBA[24..27])
              | (LBA[24..27])            | 
    1111 0111 | STATUS                   | COMMAND

  STATUS:
      7   6   5  4   3   2   1   0
     BSY RDY DF DSC DRQ COR IDX ERR

     BSY  Drive Busy
     RDY  Drive Ready
     DF   Drive Fault
     DSC  Disk Seek Complete
     DRQ  Data Request Ready
     COR  Data Corrected
     IDX  Set to 1 after a complete disk round
     ERR  Error

  DEV REG:
     7 6 5  4   3    2    1    0
     1 L 1 DRV LBA  LBA  LBA  LBA
                27   26   25   24
               HEAD HEAD HEAD HEAD
                3    2    1    0


     L   1 for LBA mode, 0 for CHS mode
     DRV 0 for master select, 1 for slave select

  SECTOR COUNT:
     Number of sectors to read or write next, plus 1, so 0x00 becomes 1 and
     0xFF becomes 256

  ERROR
      7   6  5  4   3  2     1    0 
     CRC UNC 0 IDNF 0 ABRT TK0NF AMNF

     CRC   DMA CRC error
     UNC   Data correction failed
     IDNF  Sector not found
     ABRT  Command abborted
     TK0NF Track 0 not found
     AMNF  Cannot read sector data

  COMMAND
     0x20 Read sectors
     0x30 Write sectors
     0x70 Seek
     0xE2 Stand by
     0xE7 Cache flush
     0xEC Identify drive (vendor, etc.... returns 512 byte buffer,
          read like a sector)

  buffer indices for identify command:
       0 device type
      20 serial number (20 ASCII characters)
      54 model name (40 ASCII characters)
      98 Capabilities
          bit 9 LBA supported
          bit 8 DMA supported
     114 Current capacity in sectors (4 byte)


  Further details can be read on osdev.org or in the documentation of
  Linux (the famous OS kernel).


    Hardware Overview
    *****************

        IDE write cycle:

                __________________________
       ADDR ---<__________________________>----
                   _______________________
       DATA ------<_______________________>----
            __________                 ________
       IORQ           |_______________|
            ___________                 ______
       IOR             |_______________|

            ___________________________________
    IDE CS1
            _____________                 _____
    IDE CS0              |_______________|
            ______________                 ____
    IDE WR                |_______________|
            ___________________________________
    IDE RD



  IDE                                                      BUS
 _____            WREG                                    _____
|     |           74574                                  |     |
|     |           ______                                 |     |
|   D8|/|________|Q0  D0|/|______________________________|D0   |
|   ..|  __   ___|..  ..|  __   _________________________|..   |
|  D15|\|  | |   |Q7  D7|\|  | |                         |D7   |
|     |    | |   |      |    | |                         |     |
|     |    | |   |   CLK|<---| |-- C1                /|__|A0   |
|     |    | |   |    OE|<---| |-- O1             A <  __|..   |
|     |    | |   |______|    | |                     \|  |A7   |
|     |    | |               | |                         |     |
|     |    | |    RREG       | |                   IOR <-|IOR  |
|     |    | |    74574      | |                   IOW <-|IOW  |
|     |    | |    ______     | |                         |_____|
|     |    | |_|\|D0  Q0|__|\| |          74688_1
|     |    |___  |..  ..|__  | |          _______
|     |        |/|D7  Q7|  |/| |     1 ->|Q0   P0|<- A[7]
|     |          |      |    | |     1 ->|Q1   P1|<- A[6]
|     |          |   CLK|<---| |- C0 0 ->|Q2   P2|<- A[4]
|     |          |    OE|<---| |- O0 1 ->|Q3   P3|<- A[2]
|     |          |______|    | |     1 ->|Q4   P4|<- A[0]
|   D0|/|____________________| |     1 ->|Q5   P5|<- A[1]
|   ..|  ______________________|     1 ->|Q6   P6|<- A[3]
|   D7|\|                            1 ->|Q7   P7|<- A[5]
|     |                                  |       |
|   A0|<--- A[0]                  IORQ ->|EN    Y|-------------+
|   A1|<--- A[1]                         |_______|             |
|   A2|<--- A[2]                                               |
|     |                                    74688               |
|     |   LED    ____                     _______              |
| DASP|---|<|---|____|--> VCC        1 ->|Q0   P0|<- A[7]      |
|     |           R2                 1 ->|Q1   P1|<- A[6]      |
| CSEL|-> GND                        1 ->|Q2   P2|<- A[4]      |
|DMACK|-> VCC    ____                0 ->|Q3   P3|<- 0         |
|IORDY|---------|____|--> VCC        0 ->|Q4   P4|<- 0         |
|     |           R1                 0 ->|Q5   P5|<- 0         |
|   RD|-> IOR                        0 ->|Q6   P6|<- A[3]      |
|   WR|-> IOW                        1 ->|Q7   P7|<- A[5]      |
|     |                                  |       |             |
|  CS1|-> VCC                     IORQ ->|EN    Y|--+----+     |
|  CS0|-+                                |_______|  |    |     |
|_____| |___________________________________________|    |     |
                                                         |     |
                                           7432          |     |
                                                         |     |
                                  C0 <-------------------+     |
                                                         |     |
                                            2B <---------+     |
                                  O1 <- 2Y  2A <- IOW          |
                                                               |
                                            1A <- IOW          |
                                  C1 <- 1Y  1B <---------------+
                                                               |
                                  O0 <- 4Y  4B <---------------+
                                            4A <- IOR

