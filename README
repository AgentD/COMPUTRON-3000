
                                COMPUTRON 3000
                                **************

  The COMPUTRON 3000 project is an effort to create a retro computing platform
  around the Z80 8 bit micro processor to toy and experiment with
  never-was-state-of-the-art hardware.

  The goal of the project is to build a working and >usable< microcomputer
  with a time sharing operating sysstem around the Z80 processor using
  then-state-of-the-art technology, NOT USING ANY MICROCONTROLLERS,
  PROGRAMMABLE HARDWARE OR EVEN PARTS NOT AVAILABLE IN DIP PACKAGES!!

  The CPU can theoretically access up to 8 MB through an address decoder and
  bank switching logic made out of 74HC parts.

  The lower 32 kB of the address range are shared memory with 1 kB boot ROM,
  the upper 32 kB are bankswitched.

  So far, a working prototype has been built, consisting of a CPU board,
  a memory board and an UART board prototype.

  The text below is (for now) just a random assortment of ideas that should be
  writted down somewhere.

 LICENSE
 *******

  The files and documents of the COMPUTRON 3000 are released under the terms
  and conditions of the GNU General Public License, version 3 or later
  (at your choice).

  The terms and condidtions of the GNU GPLv3 can be found in the file
  "LICENSE"

 Files
 *****

  This list should provide some information on where to find what:

    main.txt  -> Schematics of board with CPU, lower RAM and ROM
    main.pcb  -> pcb layout of the board

    himem.txt -> Memory extension board descritption/schematics
    himem.pcb -> Memory extension board pcb layout

 Backplane Bus
 *************

    The system uses a DIN 41617 based backplane I/O bus.

    The image below depicts the pinout of the bus connector, as seen when
    looking onto the top layer of the PCB. The bus connector would point to
    the right, the PCB itself would extent to the left:

             o VCC
     IORQ o
             o CPU-INT
      RST o
             o WR
       RD o
             o IRQ0
     IRQ1 o
             o IRQ2
     IRQ3 o
             o IRQ4
     IRQ5 o
             o IRQ6
     IRQ7 o
             o A7
       A6 o
             o A5
       A4 o
             o A3
       A2 o
             o A1
       D4 o
             o A0
       D3 o
             o D5
       D7 o
             o D6
       D0 o
             o D2
       D1 o
             o GND


    A0...A7:     address lines
    D0...D7:     data lines
    IRQ1...IRQ7: interrupt request lines. Lower number has higher priority.
                 Pulled low to trigger interrupt
    CPU-INT:     CPU interrupt line; pulled low to trigger CPU interrupt.
    IORQ:        Pulled low when the CPU wants to access the I/O devices.
    WR:          Pulled low when the CPU wants to write to an I/O device.
    RD:          Pulled low when the CPU wants to read from an I/O device.
    RST:         Pulled low when the system performs a hardware reset.


 System Boards
 *************

  The system consists of the following boards plugged into the backplane:

   - MAIN BOARD
      This board contains the z80 processor with clock source,
      lower address range RAM & ROM and an address decoder.
   - MEMORY EXTENSION BOARD
      This board contains extra bankswitched memory to be mapped into the
      upper 32 kB of the address space. The board uses an additional row of
      pins to connect to the main board and must be plugged directly to the
      main board.


 Memory Map
 **********

   Address
             ____________
    0x0000  |            |
            |  Boot ROM  |
    0x03FF  |____________|
    0x0400  |            |
            |            |
            | Shared RAM |
            |            |
    0x7FFF  |____________|____________ ___
    0x8000  |            |            |   \
            |            |            |   /
            | RAM Bank 0 | RAM Bank 1 |   \
            |            |            |   /
    0xFFFF  |____________|____________|___\

     -> 16 bit physical address (64kB address space)
     -> lower 32 kB shared
          -> 1 kB boot ROM
          -> 31 kB shared RAM
     -> upper 32 kB bank switched
          -> up to 256 banks (256*32kB = 8192kB = 8MB addressable!)


    The boot ROM contains the boot strap loader executed on system reset.
    The shared RAM is intended for holding an operating system proper with
    shared entry points, while the various banks are intended for being
    used by processes running on the system and provide both an extension of
    sytem memory beyond the addressable 64 kB and a simple form of virtual
    memory, since code in the banks use the same address range.

 I/O address space
 *****************

    0x00:      write only bank switching register

